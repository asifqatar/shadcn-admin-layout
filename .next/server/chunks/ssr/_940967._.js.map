{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/dashboard/overview.tsx"],"sourcesContent":["\"use client\"\n\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\"\n\nconst data = [\n  {\n    name: \"Jan\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Feb\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Mar\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Apr\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"May\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n  {\n    name: \"Jun\",\n    total: Math.floor(Math.random() * 5000) + 1000,\n  },\n]\n\nexport function Overview() {\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <XAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `$${value}`}\n        />\n        <Bar\n          dataKey=\"total\"\n          fill=\"currentColor\"\n          radius={[4, 4, 0, 0]}\n          className=\"fill-primary-500\"\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAIA,MAAM,OAAO;IACX;QACE,MAAM;QACN,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAC5C;IACA;QACE,MAAM;QACN,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAC5C;IACA;QACE,MAAM;QACN,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAC5C;IACA;QACE,MAAM;QACN,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAC5C;IACA;QACE,MAAM;QACN,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAC5C;IACA;QACE,MAAM;QACN,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAC5C;CACD;AAEM,SAAS;IACd,qBACE,8OAAC,mKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;YAAC,MAAM;;8BACd,8OAAC,qJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;;;;;;8BAEZ,8OAAC,qJAAA,CAAA,QAAK;oBACJ,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,eAAe,CAAC,QAAU,CAAC,CAAC,EAAE,OAAO;;;;;;8BAEvC,8OAAC,mJAAA,CAAA,MAAG;oBACF,SAAQ;oBACR,MAAK;oBACL,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;oBACpB,WAAU;;;;;;;;;;;;;;;;;AAKpB"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,uBAAS,sMAAM,UAAU,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,mKAAgB,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,mKAAgB,QAAQ;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAgB,QAAQ,CAAC,WAAW"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}